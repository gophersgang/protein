// Copyright Â© 2016 Zenly <hello@zen.ly>.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/******************************************************************************/
/**               THIS SCHEMA IS FOR AUTOMATED TESTING ONLY                  **/
/**        MODIFYING IT IN ANY WAY WOULD RESULT IN MASSIVE BREAKAGE          **/
/**                                                                          **/
/**                 /!\ DO NOT EVER MODIFY THIS FILE /!\                     **/
/******************************************************************************/

syntax = "proto3";

package protein;

import "google/protobuf/timestamp.proto";
import "protobuf/gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = false;
option (gogoproto.unmarshaler_all) = false;
option (gogoproto.sizer_all) = false;
option (gogoproto.protosizer_all) = false;
option (gogoproto.unsafe_marshaler_all) = false;
option (gogoproto.unsafe_unmarshaler_all) = false;
option (gogoproto.stable_marshaler_all) = false;
option (gogoproto.typedecl_all) = true;
option (gogoproto.gostring_all) = true;
option (gogoproto.stringer_all) = false;
option (gogoproto.onlyone_all) = false;

message OtherTestSchemaXXX {
	google.protobuf.Timestamp ts = 1;
}

message TestSchemaXXX {
	message NestedSchema {
		string key = 1;
		string value = 2;
	}

	string uid = 1;
	string fq_name = 2;
	map<string, NestedSchema> deps = 4;

	oneof descr {
		string str = 30;
		bytes  buf = 31;
	}

	google.protobuf.Timestamp ts = 7;
	OtherTestSchemaXXX ots = 9;

	repeated NestedSchema nss = 8;
}
